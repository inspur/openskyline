export default {
  scalingService: {
    //---------伸缩服务部分--------------
    scalingServiceTip: "Scaling Service Tip",
    scalingService: "Scaling Service",
    maxCapabilitySize: "Max Capability Size",
    minCapabilitySize: "Min Capability Size",
    desiredCapacity: "Desired Capacity",
    lbPolicy: "Lb Policy",
    vipAddress: "Vip Address",
    createService: "Create Service",
    createScalingService: "Create Scaling Service",
    editName: "Edit Name",
    adjustCapacity: "Adjust Capacity",
    setBalance: "Set Balance",
    detachBalance: "Detach Balance",
    alarmThreshold: "Alarm Threshold",
    healthCheck: "Health Check",
    deleteService: "Delete Service",
    sendApplySuccess: "Send apply success.",
    init: "Init",
    available: "Available",
    critical: "Critical",
    warning: "Warning",
    creating: "Creating",
    updating: "Updating",
    resizing: "Resizing",
    deleting: "Deleting",
    checking: "Checking",
    recovering: "Recovering",
    operating: "Operating",
    error: "Error",
    hasSet: "Has Set",
    unSet: "Un Set",
    editScalingServiceName: "Edit Scaling Service Name",
    updateSuccess: "Update Success",
    resizeScalingServiceCapability: "Resize Scaling Service Capability",
    capabilityNotMeetTheRequirements: "Not meet requirements：the min capability <= current capability <= the max capability.please input again.",
    notMeetTheRequirements: "Not meet the requirements!",
    cannotStartWithZero: "Can not start with zero!",
    resume: "Resume",
    nodeDetail: "Node Detail",
    logDetail: "Log Detail",
    setAlarmThreshold: "Set Alarm Threshold",
    cpuUsed: "CPU Used",
    setTheMaxAndMinOfInstanceCpuUsed: "Set the max and min of instance cpu used.",
    maxSize: "Max Size: ",
    minSize: "minSize: ",
    memoryUsed: "Memory Used",
    setTheMaxAndMinOfInstanceMemoryUsed: "Set the max and min of instance memory used.",
    prompt: "Prompt: ",
    expansionCondition: "As long as the average availability of instance in scalingService reach the max of cpu availability or memory availability,will trigger Expansion",
    reduceCondition: "As long as the average availability of instance in scalingService reach the min of cpu availability and memory availability,will trigger reduce",
    operateTooFast: "Operate too fast!",
    cpuAndMemNotMeetTheRequirements: "cpu And Mem Not Meet The Requirements",
    cpuNotMeetTheRequirements: "cpu Not Meet The Requirements",
    memNotMeetTheRequirements: "Mem Not Meet The Requirements",
    baseInfo: "Base Info",
    subnet: "Subnet",
    selectSubnet: "Select Subnet",
    configInfo: "Config Info",
    method: "Method",
    leastConnections: "Least Connections",
    roundRobin: "Round Robin",
    sourceIp: "Source Ip",
    leastConnectionsInfo: "Least Connections Info:Request will be provided to the memeber who has the min connections.",
    roundRobinInfo: "Round Robin Info:Request will be provided to every memeber in order.",
    sourceIpInfo: "Source Ip Info:Requests root  form the same IP will be provided to the same member.",
    selectProtocol: "Select Protocol",
    protocol: "Protocol",
    port: "Port",
    portInfo: "Port must be integer between 1 and 65535.",
    setServiceBanlance: "Set Service Banlance",
    loadblancePolicy: "Load Balancing Strategy",
    //roundRobin:"操作过快！正在检查项目的配额，请重新点击确定",
    exceedSourceQuota: "Exceed Source Quota",
    exceedLbQuota: "Exceed Lb Quota",
    statusReason: "Status Reason",
    overtimeLimit: "Overtime Limit",
    nodeList: "Node List",
    instanceInfo: "Instance Info",
    ipAddress: "Ip Address",
    instanceSpec: "Instance Spec",
    specName: "Spec Name",
    cpu: "CPU",
    core: " Core",
    memory: "Memory",
    disk: "Disk",
    physicalId: "Physical Id",
    clusterId: "Cluster Id",
    floatIp: "(FloatIp)",
    logList: " Log List",
    eventName: "Event Name",
    eventType: "Event Type",
    eventStatus: "Event Status",
    operate: "Operate",
    operateTime: "Operate Time",
    user: "user",
    inputAddNodeNum: "Input Add Node Num",
    inputReduceNodeNum: "Input Reduce Node Num",
    addNodeNum: "Add Node Num",
    reduceNodeNum: "Reduce Node Num",
    currentCapability: "Input desired capacity, the desired capacity is between the min capacity and the max capacity",
    inputCurrentCapabilty: "Input Current Capabilty",
    capabiltyMinGreaterThanMax: "the min capacity cannot exceed the max capacity",
    inputMinCapabilty: "Input Min Capabilty",
    inputMaxCapabilty: "Input Max Capabilty",
    selectClusterKeyPair: "Select Cluster KeyPair",
    keyPair: "KeyPair",
    selectClusterNetwork: "Select Cluster Network",
    network: "Network",
    pleaseSelectImage: "Please select image first",
    selectClusterInstanceType: "Select Cluster Instance Type",
    selectClusterImage: "Select Cluster Image",
    instanceNameInClusterIsDiffer: "Instance Name In Cluster Is Differ",
    inputClusterInstanceName: "Input Cluster Instance Name",
    inputScalingServiceName: "Input Scaling Service Name",
    scalingServiceName: "Scaling Service Name",
    instanceName: "Instance Name",
    instanceType: "Instance Type",
    image: "Image",
    scalingSpec: "Scaling Spec",
    addScaleServerPrompt: "If you need to configure load balancing for the scaling service, you need to add ICMP rules to the selected security group",
    securityGroup: "Security Group",
    ipisOccupy: "IP is occupy"
  }
}
